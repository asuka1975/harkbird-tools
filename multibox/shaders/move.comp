#version 460

layout (local_size_x = 32, local_size_y = 32, local_size_z = 1) in;

layout (location = 0) uniform vec2 dmove;
layout (location = 1) uniform uint num_boxes;

struct Box {
    vec2 range;
    float value;
    int color_id;
};

layout (std430, binding = 0) buffer SSBO {
    Box boxes[];
};

layout (std430, binding = 1) buffer Select {
    int selects[];
};

void main() {
    uint work_index = gl_WorkGroupID.z * gl_NumWorkGroups.x * gl_NumWorkGroups.y +
                      gl_WorkGroupID.y * gl_NumWorkGroups.x +
                      gl_WorkGroupID.x;
    uint index = gl_LocalInvocationIndex + work_index * gl_WorkGroupSize.x * gl_WorkGroupSize.y * gl_WorkGroupSize.z;

    if(index < num_boxes) {
        boxes[index].range += vec2(dmove.x) * float(selects[index]);
        boxes[index].value += dmove.y * float(selects[index]);
    }
}